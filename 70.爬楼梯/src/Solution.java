/*假设你正在爬楼梯。需要 n 阶你才能到达楼顶。
  每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？

输入：n = 2
输出：2
解释：有两种方法可以爬到楼顶。
1. 1 阶 + 1 阶
2. 2 阶

输入：n = 3
输出：3
解释：有三种方法可以爬到楼顶。
1. 1 阶 + 1 阶 + 1 阶
2. 1 阶 + 2 阶
3. 2 阶 + 1 阶
*/

//动态规划
//第n个台阶只能从第n-1或者n-2个上来。到第n-1个台阶的走法 + 第n-2个台阶的走法 = 到第n个台阶的走法，
//已经知道了第1个和第2个台阶的走法，一路加上去。
class Solution {
    public int climbStairs(int n) {
        int a = 1, b = 2, t = 0;
        if (n == 1)
            return 1;
        else if (n == 2)
            return 2;
        else {
            for (int i = 3 ; i <= n ; i++){
                t = a + b ;
                a = b;
                b = t;
            }
        }

        return t;
    }
}